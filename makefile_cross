
ROOTDIR				:= $(realpath .)
CROSSDIR			:= $(ROOTDIR)/aos4_cross
DOWNLOADDIR			:= $(ROOTDIR)/_download
TOUCHDIR			:= $(ROOTDIR)/_touch
TMPDIR				:= $(ROOTDIR)/_temp
DATADIR				:= $(ROOTDIR)/_data

# Normaly gcc version nr (display only)
VERSION				:= 11.5.0

# Archives
ARCHIVE_GMP			:= gmp-5.1.3.tar.gz
ARCHIVE_MPFR		:= mpfr-3.1.6.tar.gz
ARCHIVE_MPC			:= mpc-1.0.3.tar.gz
ARCHIVE_BINUTILS	:= binutils-2.23.2.tar.gz
ARCHIVE_GCC			:= gcc-11.5.0.tar.gz

# Patche dir for binutils / coreutils / gcc
PATCHDIR_BINUTILS	:= $(DOWNLOADDIR)/adtools/binutils/2.23.2/patches
PATCHDIR_COREUTILS	:= $(DOWNLOADDIR)/adtools/coreutils/5.2/patches
PATCHDIR_GCC		:= $(DOWNLOADDIR)/adtools/gcc/11/patches

# git repos
CLIB2_URL			:= https://github.com/sodero/clib2
CLIB2_SHA1			:= 1a42c693e03881f6f969c43ab36ce20d2569751d
CLIB4_URL			:= https://github.com/AmigaLabs/clib4
CLIB4_SHA1			:= HEAD
ADTOOLS_URL			:= https://github.com/AmigaLabs/adtools
ADTOOLS_SHA1		:= HEAD

all: run_build

######################################################################
# Build / Patch / Install

# Build clib4
$(TOUCHDIR)/build_clib4: $(TOUCHDIR)/build_xgcc
	@echo "Building clib4"
	@rm -rf $(TMPDIR)
	cp -rp $(DOWNLOADDIR)/clib4 $(TMPDIR)
	cd $(TMPDIR) && \
	PATH="$(CROSSDIR)/bin:$(PATH)" make -f GNUmakefile.os4 \
		AS="$(CROSSDIR)/bin/ppc-amigaos-as" \
		CC="$(CROSSDIR)/bin/ppc-amigaos-gcc" \
		AR="$(CROSSDIR)/bin/ppc-amigaos-ar -q" \
		RANLIB="$(CROSSDIR)/bin/ppc-amigaos-ranlib" \
		SDK_INCLUDE=$(CROSSDIR)/ppc-amigaos/SDK/include \
		INSTALL_PREFIX=$(CROSSDIR)/ppc-amigaos/SDK/clib4
	cd $(TMPDIR) && \
	PATH="$(CROSSDIR)/bin:$(PATH)" make -f GNUmakefile.os4 install \
		INSTALL_PREFIX=$(CROSSDIR)/ppc-amigaos/SDK/clib4
	cp $(DOWNLOADDIR)/clib4/LICENSE* $(CROSSDIR)/ppc-amigaos/SDK/clib4
	rm $(CROSSDIR)/ppc-amigaos/SDK/clib4/clib4.*
	touch $@


# Build clib2
$(TOUCHDIR)/build_clib2: $(TOUCHDIR)/build_xgcc
	@echo "Building clib2"
	@rm -rf $(TMPDIR)
	cp -rp $(DOWNLOADDIR)/clib2/library $(TMPDIR)
	cd $(TMPDIR) && \
	PATH="$(CROSSDIR)/bin:$(PATH)" make -f GNUmakefile.os4 \
		AS="$(CROSSDIR)/bin/ppc-amigaos-as" \
		CC="$(CROSSDIR)/bin/ppc-amigaos-gcc" \
		AR="$(CROSSDIR)/bin/ppc-amigaos-ar -q" \
		RANLIB="$(CROSSDIR)/bin/ppc-amigaos-ranlib"
	cp -rp $(TMPDIR)/lib/* $(CROSSDIR)/ppc-amigaos/SDK/clib2/lib
	cp $(DOWNLOADDIR)/clib2/LICENSE* $(CROSSDIR)/ppc-amigaos/SDK/clib2
	touch $@

# Build cross GCC
# Note to self: you are not suposed to build in root of gcc dir
$(TOUCHDIR)/build_xgcc: $(TOUCHDIR)/build_sdk_includes
	@echo "Building cross GCC"
	@rm -rf $(TMPDIR)
	@mkdir -p $(TMPDIR)/build
	@tar -xzf $(DOWNLOADDIR)/$(ARCHIVE_GCC) -C $(TMPDIR) && \
	cd $(TMPDIR)/gcc-releases-$(basename $(basename $(ARCHIVE_GCC))) && \
	for p in $(abspath $(PATCHDIR_GCC))/*.patch; do echo "Applying $$p"; patch -p1 < $$p || exit 1; done && \
	cd ../build && \
	PATH="$(CROSSDIR)/bin:$(PATH)" \
		../gcc-releases-$(basename $(basename $(ARCHIVE_GCC)))/configure \
		--with-bugurl='https://github.com/sba1/adtools/issues' \
		--with-pkgversion='adtools build $(VERSION)' \
		--with-as=$(CROSSDIR)/bin/ppc-amigaos-as \
		--with-ld=$(CROSSDIR)/bin/ppc-amigaos-ld \
		--target=ppc-amigaos \
		--enable-languages=c,c++,objc,obj-c++ \
		--enable-sjlj-exceptions \
		--enable-haifa \
		--enable-lto \
		--disable-libstdcxx-pch \
		--disable-tls \
		--prefix=$(CROSSDIR) && \
	PATH="$(CROSSDIR)/bin:$(PATH)" make && \
	PATH="$(CROSSDIR)/bin:$(PATH)" make install
	@touch $@

# Build SDK includes
$(TOUCHDIR)/build_sdk_includes:
	@echo "Building SDK includes"
	@rm -rf   $(TMPDIR)
	@mkdir -p $(TMPDIR)
	@rm -rf   $(CROSSDIR)/ppc-amigaos
	@mkdir -p $(CROSSDIR)/ppc-amigaos/SDK/include
	@mkdir -p $(CROSSDIR)/ppc-amigaos/SDK/clib2/lib
	@mkdir -p $(CROSSDIR)/ppc-amigaos/SDK/clib4/lib
	@mkdir -p $(CROSSDIR)/ppc-amigaos/SDK/clib2/include
	@mkdir -p $(CROSSDIR)/ppc-amigaos/SDK/clib4/include
	@cp -rp $(DOWNLOADDIR)/clib2/library/include $(CROSSDIR)/ppc-amigaos/SDK/clib2
	@cp -rp $(DOWNLOADDIR)/clib4/library/include $(CROSSDIR)/ppc-amigaos/SDK/clib4
	@cp -rp $(DATADIR)/clib2_lib/* $(CROSSDIR)/ppc-amigaos/SDK/clib2/lib/
	@cp -rp $(DATADIR)/clib4_lib/* $(CROSSDIR)/ppc-amigaos/SDK/clib4/lib/
	@cp $(DOWNLOADDIR)/SDK_54.16.lha $(TMPDIR)
	cd $(TMPDIR) && lha x SDK_54.16.lha
	cd $(TMPDIR)/SDK_Install && lha xf newlib*.lha
	cd $(TMPDIR)/SDK_Install && lha xf base.lha
	cd $(TMPDIR)/SDK_Install && lha xf execsg*.lha
	cd $(TMPDIR)/SDK_Install && cp -r newlib    $(CROSSDIR)/ppc-amigaos/SDK
	cd $(TMPDIR)/SDK_Install && cp -r Include/* $(CROSSDIR)/ppc-amigaos/SDK/include
	@touch $@

# Build binutils
$(TOUCHDIR)/build_binutils:
	@echo "Building binutils"
	@rm -rf $(TMPDIR)
	@mkdir -p $(TMPDIR)
	@tar -xzf $(DOWNLOADDIR)/$(ARCHIVE_BINUTILS) -C $(TMPDIR) && \
	cd $(TMPDIR)/$(basename $(basename $(ARCHIVE_BINUTILS))) && \
	for p in $(abspath $(PATCHDIR_BINUTILS))/*.patch; do echo "Applying $$p"; patch -p1 < $$p || exit 1; done && \
	PATH="$(CROSSDIR)/bin:$(PATH)" CFLAGS="-Wno-switch -Wno-unused" ./configure --enable-plugins --target=ppc-amigaos --prefix=$(CROSSDIR) && \
	PATH="$(CROSSDIR)/bin:$(PATH)" make && \
	PATH="$(CROSSDIR)/bin:$(PATH)" make install
	@touch $@

# Build MPC
$(TOUCHDIR)/build_mpc: $(TOUCHDIR)/build_mpfr
	@echo "Building MPC"
	@rm -rf $(TMPDIR)
	@mkdir -p $(TMPDIR)
	@tar -xzf $(DOWNLOADDIR)/$(ARCHIVE_MPC) -C $(TMPDIR) && \
	cd $(TMPDIR)/$(basename $(basename $(ARCHIVE_MPC))) && \
	PATH="$(CROSSDIR)/bin:$(PATH)" ./configure --prefix=$(CROSSDIR) --with-gmp=$(CROSSDIR) --with-mpfr=$(CROSSDIR) && \
	PATH="$(CROSSDIR)/bin:$(PATH)" make && \
	PATH="$(CROSSDIR)/bin:$(PATH)" make install
	@touch $@

# Build MPFR
$(TOUCHDIR)/build_mpfr: $(TOUCHDIR)/build_gmp
	@echo "Building MPFR"
	@rm -rf $(TMPDIR)
	@mkdir -p $(TMPDIR)
	@tar -xzf $(DOWNLOADDIR)/$(ARCHIVE_MPFR) -C $(TMPDIR) && \
	cd $(TMPDIR)/$(basename $(basename $(ARCHIVE_MPFR))) && \
	PATH="$(CROSSDIR)/bin:$(PATH)" ./configure --prefix=$(CROSSDIR) --with-gmp=$(CROSSDIR) && \
	PATH="$(CROSSDIR)/bin:$(PATH)" make && \
	PATH="$(CROSSDIR)/bin:$(PATH)" make install
	@touch $@

# Build GMP
$(TOUCHDIR)/build_gmp:
	@echo "Building GMP"
	@rm -rf $(TMPDIR)
	@mkdir -p $(TMPDIR)
	@tar -xzf $(DOWNLOADDIR)/$(ARCHIVE_GMP) -C $(TMPDIR) && \
	cd $(TMPDIR)/$(basename $(basename $(ARCHIVE_GMP))) && \
	PATH="$(CROSSDIR)/bin:$(PATH)" ./configure --prefix=$(CROSSDIR) && \
	PATH="$(CROSSDIR)/bin:$(PATH)" make && \
	PATH="$(CROSSDIR)/bin:$(PATH)" make install
	@touch $@

.PHONY: do_build
do_build:	$(TOUCHDIR)/build_gmp \
			$(TOUCHDIR)/build_mpfr \
			$(TOUCHDIR)/build_mpc \
			$(TOUCHDIR)/build_binutils \
			$(TOUCHDIR)/build_sdk_includes \
			$(TOUCHDIR)/build_xgcc \
			$(TOUCHDIR)/build_clib2 \
			$(TOUCHDIR)/build_clib4
	@rm -rf $(TMPDIR)
	@echo "Build complete"

.PHONY: run_build
run_build: run_update do_build
	@echo "Building done"

######################################################################
# Download

# Download gcc archive
$(TOUCHDIR)/archive_gcc:
	@echo "Downloading gcc archive"
	@rm -f $(DOWNLOADDIR)/$(ARCHIVE_GCC)
	@cd $(DOWNLOADDIR) && wget -N http://github.com/gcc-mirror/gcc/archive/refs/tags/releases/$(ARCHIVE_GCC)
	@touch $@

# Download binutils archive
$(TOUCHDIR)/archive_binutils:
	@echo "Downloading binutils archive"
	@rm -f $(DOWNLOADDIR)/$(ARCHIVE_BINUTILS)
	@cd $(DOWNLOADDIR) && wget -N https://ftp.gnu.org/gnu/binutils/$(ARCHIVE_BINUTILS)
	@touch $@

# Download adtools
$(TOUCHDIR)/git_adtools:
	@echo "Downloading adtools git repo"
	@rm -rf $(DOWNLOADDIR)/adtools
	@cd $(DOWNLOADDIR) && ( git clone $(ADTOOLS_URL) adtools || true ) && cd adtools && git checkout $(ADTOOLS_SHA1)
	@touch $@

# Download clib4
$(TOUCHDIR)/git_clib4:
	@echo "Downloading clib4 git repo"
	@rm -rf $(DOWNLOADDIR)/clib4
	@cd $(DOWNLOADDIR) && ( git clone $(CLIB4_URL) clib4 || true ) && cd clib4 && git checkout $(CLIB4_SHA1)
	@touch $@

# Download clib2
$(TOUCHDIR)/git_clib2:
	@echo "Downloading clib2 git repo"
	@rm -rf $(DOWNLOADDIR)/clib2
	@cd $(DOWNLOADDIR) && ( git clone $(CLIB2_URL) clib2 || true ) && cd clib2 && git checkout $(CLIB2_SHA1)
	@touch $@

# Download SDK 54.16 archive
$(TOUCHDIR)/archive_sdk:
	@echo "Downloading SDK 54.16 archive"
	@rm -f $(DOWNLOADDIR)/SDK_54.16.lha
	wget "https://www.hyperion-entertainment.biz/index.php?option=com_registration&amp;view=download&amp;format=raw&amp;file=127" -O $(DOWNLOADDIR)/SDK_54.16.lha
	@touch $@

# Download gmp archive
$(TOUCHDIR)/archive_gmp:
	@echo "Downloading GMP archive"
	@rm -f $(DOWNLOADDIR)/$(ARCHIVE_GMP)
	@cd $(DOWNLOADDIR) && wget -N https://ftp.gnu.org/gnu/gmp/$(ARCHIVE_GMP)
	@touch $@

# Download mpfr archive
$(TOUCHDIR)/archive_mpfr:
	@echo "Downloading MPFR archive"
	@rm -f $(DOWNLOADDIR)/$(ARCHIVE_MPFR)
	@cd $(DOWNLOADDIR) && wget -N https://ftp.gnu.org/gnu/mpfr/$(ARCHIVE_MPFR)
	@touch $@

# Download mpc archive
$(TOUCHDIR)/archive_mpc:
	@echo "Downloading MPC archive"
	@rm -f $(DOWNLOADDIR)/$(ARCHIVE_MPC)
	@cd $(DOWNLOADDIR) && wget -N https://ftp.gnu.org/gnu/mpc/$(ARCHIVE_MPC)
	@touch $@

.PHONY: do_download
do_download:	$(TOUCHDIR)/archive_gmp \
				$(TOUCHDIR)/archive_mpfr \
				$(TOUCHDIR)/archive_mpc \
				$(TOUCHDIR)/archive_sdk \
				$(TOUCHDIR)/git_clib2 \
				$(TOUCHDIR)/git_clib4 \
				$(TOUCHDIR)/git_adtools \
				$(TOUCHDIR)/archive_binutils \
				$(TOUCHDIR)/archive_gcc
	@echo "Downloading done"

.PHONY: do_make_dirs
do_make_dirs:
	@mkdir -p $(DOWNLOADDIR)
	@mkdir -p $(TOUCHDIR)
	@mkdir -p $(CROSSDIR)/bin

.PHONY: run_update
run_update: do_make_dirs do_download

######################################################################
